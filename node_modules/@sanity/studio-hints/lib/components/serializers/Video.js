"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _dynamic = _interopRequireDefault(require("next/dynamic"));

var _urlParse = _interopRequireDefault(require("url-parse"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var YouTube = (0, _dynamic.default)(() => Promise.resolve().then(() => _interopRequireWildcard(require('react-youtube'))));

var resolveYTId = url => (0, _urlParse.default)(url).pathname.replace('/', '');

var Video = (_ref) => {
  var _ref$url = _ref.url,
      url = _ref$url === void 0 ? '' : _ref$url,
      containerClassName = _ref.containerClassName,
      className = _ref.className;
  return /*#__PURE__*/_react.default.createElement(YouTube, {
    videoId: resolveYTId(url),
    containerClassName: containerClassName,
    className: className
  });
};

Video.propTypes = {
  url: _propTypes.default.string,
  containerClassName: _propTypes.default.string,
  className: _propTypes.default.string
};
var _default = Video;
exports.default = _default;